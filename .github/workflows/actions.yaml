name: Deploy Infrastructure

on:
  push:
    branches:
      - main

jobs:
  terraform:
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ variables.AWS_REGION }}
      AWS_DEFAULT_OUTPUT: json

    name: "Deploy-Development-Environment"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: check if backend exists
        id: check
        continue-on-error: true
        run: |         
          bucketstatus=$(aws s3api head-bucket --bucket "${{ secrets.TFSTATE_BUCKET }}" 2>&1)
          if echo "${bucketstatus}" | grep 'Not Found';
          then
            echo "bucket doesn't exist";
          elif echo "${bucketstatus}" | grep 'Forbidden';
          then
            echo "Bucket exists but not owned"
          elif echo "${bucketstatus}" | grep 'Bad Request';
          then
            echo "Bucket name specified is less than 3 or greater than 63 characters"
          else
            echo "Bucket owned and exists";
            exit 1
          fi

      - name: Terraform Init Backend
        id: init
        if: steps.check.outcome != 'failure'
        run: | 
          cd backend
          terraform init -input=false

      - name: Terraform Plan Backend
        id: plan
        if: steps.check.outcome != 'failure'
        run: | 
          cd backend
          terraform plan -input=false -no-color
        continue-on-error: true

      - name: Terraform Plan Backend Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply Backend
        if: steps.check.outcome != 'failure' && steps.plan.outcome != 'failure'
        run: |
          cd backend
          terraform apply -auto-approve  

      - name: Terraform Init Infras
        id: init_infras
        run: |    
          cd infras
          terraform init \
          -backend-config="bucket=${{ secrets.TFSTATE_BUCKET }}" \
          -backend-config="key=${{ secrets.TFSTATE_KEY }}" \
          -backend-config="region=${{ variables.AWS_REGION }}" 

      - name: Terraform Plan Infras
        id: plan_infras
        run: |
          cd infras
          terraform plan -input=false -no-color
        continue-on-error: true

      - name: Terraform Plan Status Infras
        if: steps.plan_infras.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply Infras
        if: steps.plan.outcome != 'failure'
        run: | 
          cd infras
          terraform apply -auto-approve   
  
